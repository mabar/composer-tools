name: "ci"

on:
  pull_request:
    types: [ "opened", "synchronize", "edited", "reopened" ]
    paths-ignore:
      - "docs/**"
  push:
    branches:
      - "main"
    paths-ignore:
      - "docs/**"
  schedule:
    - cron: "0 8 * * 1" # At 08:00 on Monday

env:
  php-extensions: "json"
  php-tools: "composer:v2"

jobs:
  coding-standard:
    name: "Coding standard"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        php-version: [ "7.4" ]
        operating-system: [ "ubuntu-latest" ]
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Create PHP extensions cache key"
        uses: "actions/github-script@v3"
        id: "php-extensions-cache-key"
        with:
          script: "return '${{ env.php-extensions }}'.replace(' ', '').replace(',', '+');"
          result-encoding: "string"

      - name: "Setup PHP cache environment"
        id: "php-extensions-cache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.php-extensions }}"
          key: "${{ steps.php-extensions-cache-key.outputs.result }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.php-extensions-cache.outputs.dir }}"
          key: "${{ steps.php-extensions-cache.outputs.key }}"
          restore-keys: "${{ steps.php-extensions-cache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.php-extensions }}"
          tools: "${{ env.php-tools }}"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "php-composer-cache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.php-composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{  hashFiles('**/composer.json', '**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install PHP dependencies"
        run: "composer update --no-interaction --no-progress --prefer-dist --prefer-stable"

      - name: "Cache Codesniffer data"
        uses: "actions/cache@v2"
        with:
          path: "var/build-tools/codesniffer.dat"
          key: "${{ runner.os }}-codesniffer"
          restore-keys: "${{ runner.os }}-codesniffer"

      - name: "Coding Standard"
        run: "make cs ARGS='--report=checkstyle -q | vendor/bin/cs2pr'"

  static-analysis:
    name: "Static analysis"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        php-version: [ "7.4" ]
        operating-system: [ "ubuntu-latest" ]
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Create PHP extensions cache key"
        uses: "actions/github-script@v3"
        id: "php-extensions-cache-key"
        with:
          script: "return '${{ env.php-extensions }}'.replace(' ', '').replace(',', '+');"
          result-encoding: "string"

      - name: "Setup PHP cache environment"
        id: "php-extensions-cache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.php-extensions }}"
          key: "${{ steps.php-extensions-cache-key.outputs.result }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.php-extensions-cache.outputs.dir }}"
          key: "${{ steps.php-extensions-cache.outputs.key }}"
          restore-keys: "${{ steps.php-extensions-cache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.php-extensions }}"
          tools: "${{ env.php-tools }}"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "php-composer-cache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.php-composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{  hashFiles('**/composer.json', '**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install PHP dependencies"
        run: "composer update --no-interaction --no-progress --prefer-dist --prefer-stable"

      - name: "Cache PHPStan data"
        uses: "actions/cache@v2"
        with:
          path: "var/build-tools/PHPStan"
          key: "${{ runner.os }}-phpstan"
          restore-keys: "${{ runner.os }}-phpstan"

      - name: "PHPStan"
        run: "make phpstan"
